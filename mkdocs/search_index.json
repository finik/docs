{
    "docs": [
        {
            "location": "/", 
            "text": "Overview\n\n\nInstallation\n\n\nUsing BugSee on mobile devices requires installation of BugSee lightweight SDK:\n\n\n\n\nInstalling Android SDK\n\n\nInstalling IOS SDK\n\n\n\n\nBugSee on the WEB does not require any code modifications, no developers need to involved, the user just needs to install a browser extention and start filing bugs even for production website 30 seconds later:\n\n\n\n\nInstalling extention for Chrome\n\n\nInstalling extention for Firefox\n\n\nInstalling extention for Safari\n\n\n\n\nFeatures\n\n\nBugSee has a very rich feature set, yet on some platforms we managed to achieve more than on others, below is a table with the current state of affairs.\n\n\n\n\n\n\n\n\nFeature\n\n\nIOS\n\n\nAndroid\n\n\nWeb\n\n\n\n\n\n\n\n\n\n\nVideo\n\n\nYes\n\n\nYes*\n\n\nYes\n\n\n\n\n\n\nLog Touch events\n\n\nYes\n\n\nYes\n\n\nYes\n\n\n\n\n\n\nNetwork events\n\n\nYes\n\n\nNo\n\n\nYes\n\n\n\n\n\n\nView/activity name\n\n\nYes\n\n\nYes\n\n\nYes*\n\n\n\n\n\n\nUser events\n\n\nYes*\n\n\nYes*\n\n\nYes*\n\n\n\n\n\n\nUser traces\n\n\nYes*\n\n\nYes*\n\n\nYes*\n\n\n\n\n\n\n\n\n\n\nVideo recording\n\n\n\n\nTouch events\n\n\n\n\nNetwork\n\n\n\n\nDetect view/activity\n\n\n\n\nUser events\n\n\n\n\nUser traces\n\n\nFAQ\n\n\nWhy can't I do that?\n\n\nBecause", 
            "title": "Home"
        }, 
        {
            "location": "/#overview", 
            "text": "", 
            "title": "Overview"
        }, 
        {
            "location": "/#installation", 
            "text": "Using BugSee on mobile devices requires installation of BugSee lightweight SDK:   Installing Android SDK  Installing IOS SDK   BugSee on the WEB does not require any code modifications, no developers need to involved, the user just needs to install a browser extention and start filing bugs even for production website 30 seconds later:   Installing extention for Chrome  Installing extention for Firefox  Installing extention for Safari", 
            "title": "Installation"
        }, 
        {
            "location": "/#features", 
            "text": "BugSee has a very rich feature set, yet on some platforms we managed to achieve more than on others, below is a table with the current state of affairs.     Feature  IOS  Android  Web      Video  Yes  Yes*  Yes    Log Touch events  Yes  Yes  Yes    Network events  Yes  No  Yes    View/activity name  Yes  Yes  Yes*    User events  Yes*  Yes*  Yes*    User traces  Yes*  Yes*  Yes*      Video recording   Touch events   Network   Detect view/activity   User events   User traces", 
            "title": "Features"
        }, 
        {
            "location": "/#faq", 
            "text": "Why can't I do that?  Because", 
            "title": "FAQ"
        }, 
        {
            "location": "/sdk/ios/", 
            "text": "IOS SDK\n\n\nInstallation\n\n\nThe recommended way to install BugSee is using \nCocoaPods\n, if you insist on installing it manually follow the \ninstructions\n\n\nAdd the following line to your project's Podifile\n\n\npod 'BugSee'\n\n\n\n\nrun \npod install\n command to update your pods\n\n\nImport BugSee header file in your app delegate or the file you intend to initialize the framework from\n\n\n#import \nBugSee/BugSee.h\n\n\n\n\n\nLocate your app delegate and initialize the framework in your application:didFinishLaunchingWithOptions method:\n\n\nObjective-C\n\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    // ...other initialization code\n\n    [BugSee launchWithToken:@\nyour_app_token\n];\n\n    return YES;\n}\n\n\n\n\nSwift\n\n\n    ???\n\n\n\n\nConfiguration\n\n\nTBD\n\n\nUser traces\n\n\nUser traces can be attached to the report, this may be useful when you want to trace offline how a specific variable changes over time right before the problem happens.\n\n\nObjective-C\n\n\n    [BugSee trace:@\nmy_variable\n withVaue: 15];\n\n\n\n\nSwift\n\n\n    ???\n\n\n\n\nUser events\n\n\nUser events can be attached to the report, events are identified by a string and can have an optional dictionary of parameters that will be stored and passed along with the report.\n\n\nObjective-C\n\n\n    // Without any additional parameters\n    [BugSee registerEvent:@\npayment_processed\n];\n\n    // ...our with additional custom parameters\n    [BugSee registerEvent:@\npayment_processed\n withParams:@{\n        @\namount\n: 125,\n        @\ncurrency\n: 'USD'\n        }];\n\n\n\n\nSwift\n\n\n???", 
            "title": "IOS"
        }, 
        {
            "location": "/sdk/ios/#ios-sdk", 
            "text": "", 
            "title": "IOS SDK"
        }, 
        {
            "location": "/sdk/ios/#installation", 
            "text": "The recommended way to install BugSee is using  CocoaPods , if you insist on installing it manually follow the  instructions  Add the following line to your project's Podifile  pod 'BugSee'  run  pod install  command to update your pods  Import BugSee header file in your app delegate or the file you intend to initialize the framework from  #import  BugSee/BugSee.h   Locate your app delegate and initialize the framework in your application:didFinishLaunchingWithOptions method:  Objective-C  - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    // ...other initialization code\n\n    [BugSee launchWithToken:@ your_app_token ];\n\n    return YES;\n}  Swift      ???", 
            "title": "Installation"
        }, 
        {
            "location": "/sdk/ios/#configuration", 
            "text": "TBD", 
            "title": "Configuration"
        }, 
        {
            "location": "/sdk/ios/#user-traces", 
            "text": "User traces can be attached to the report, this may be useful when you want to trace offline how a specific variable changes over time right before the problem happens.  Objective-C      [BugSee trace:@ my_variable  withVaue: 15];  Swift      ???", 
            "title": "User traces"
        }, 
        {
            "location": "/sdk/ios/#user-events", 
            "text": "User events can be attached to the report, events are identified by a string and can have an optional dictionary of parameters that will be stored and passed along with the report.  Objective-C      // Without any additional parameters\n    [BugSee registerEvent:@ payment_processed ];\n\n    // ...our with additional custom parameters\n    [BugSee registerEvent:@ payment_processed  withParams:@{\n        @ amount : 125,\n        @ currency : 'USD'\n        }];  Swift  ???", 
            "title": "User events"
        }, 
        {
            "location": "/sdk/android/", 
            "text": "", 
            "title": "ANDROID"
        }, 
        {
            "location": "/sdk/web/", 
            "text": "", 
            "title": "WEB"
        }, 
        {
            "location": "/reference/rest-handbook/", 
            "text": "REST API\n\n\nNew SDK's can be easily implemented using the following REST API. This is a short tutorial on\nhow to implement most common operations using the REST API, see \nfull reference\n for more details.\n\n\nCreating new issue\n\n\nCreating new issue happens in three stages, first a new item is being created in the system,\nthe server provides an endpoint where the actual bundle can be uploaded, once the clients successfully\nuploads the bundle, it must update the recording session status to notify the system upload has\nbeen completed.\n\n\nStep 1\n\n\nPOST https://api.bugsee.com/issues\n\n\n\n\n{\n    app_token: '1234567',\n    access_token: '654321',\n    environment: {\n        ...\n    },\n    severity: 5,\n    title: 'Login view is broken after rotating the phone back and forth',\n    description: 'Just entered the login screen and rotated the phone, see the video'\n}\n\n\n\n\nThe response in case of success is going to include issue_id, recording_id and an endpoint for uploading the bundle.\n\n\n{\n    issue_id: '1234',\n    recording_id: '4321',\n    endpoint: 'https://upload-bucket.s3.amazonaws.com/2345678/'\n}\n\n\n\n\nStep 2\n\n\nUpload the bundle to the provided endpoint\n\n\nPUT https://upload-bucket.s3.amazonaws.com/2345678/\n\n\n\n\nStep 3\n\n\nNotify the system the recording session bundle has been uploaded\n\n\nPUT https://api.bugsee.com/issues/1234/recordings/4321\n\n\n\n\n{\n    app_token: '1234567',\n    access_token: '654321',\n    upload_complete: true\n}\n\n\n\n\nAdding recording to an issue\n\n\nThe sequence is similar to creating a new issue with slight variations, but it consists of 3 steps as well\n\n\nStep 1\n\n\nPOST https://api.bugsee.com/issues/1234/recordings\n\n\n\n\n{\n    app_token: '1234567',\n    access_token: '654321',\n    environment: {\n        ...\n    }\n}\n\n\n\n\nThe response in case of success is going to include issue_id, recording_id and an endpoint for uploading the bundle.\n\n\n{\n    issue_id: '1234',\n    session_id: '4321',\n    endpoint: 'https://upload-bucket.s3.amazonaws.com/2345678/'\n}\n\n\n\n\nStep 2\n\n\nUpload the bundle to the provided endpoint\n\n\nPOST https://upload-bucket.s3.amazonaws.com/2345678/\n\n\n\n\nStep 3\n\n\nNotify the system the recording session bundle has been uploaded\n\n\nPUT https://api.bugsee.com/issues/1234/recordings/4321\n\n\n\n\n{\n    app_token: '1234567',\n    access_token: '654321',\n    upload_complete: true\n}\n\n\n\n\nSearching issues\n\n\nIn order to locate an existing issue, a search can be performed on the issues within the application\n\n\nGET https://api.bugsee.com/issues?app_token=1234567\naccess_token=654321\nterm=login+screen", 
            "title": "REST Handbook"
        }, 
        {
            "location": "/reference/rest-handbook/#rest-api", 
            "text": "New SDK's can be easily implemented using the following REST API. This is a short tutorial on\nhow to implement most common operations using the REST API, see  full reference  for more details.", 
            "title": "REST API"
        }, 
        {
            "location": "/reference/rest-handbook/#creating-new-issue", 
            "text": "Creating new issue happens in three stages, first a new item is being created in the system,\nthe server provides an endpoint where the actual bundle can be uploaded, once the clients successfully\nuploads the bundle, it must update the recording session status to notify the system upload has\nbeen completed.  Step 1  POST https://api.bugsee.com/issues  {\n    app_token: '1234567',\n    access_token: '654321',\n    environment: {\n        ...\n    },\n    severity: 5,\n    title: 'Login view is broken after rotating the phone back and forth',\n    description: 'Just entered the login screen and rotated the phone, see the video'\n}  The response in case of success is going to include issue_id, recording_id and an endpoint for uploading the bundle.  {\n    issue_id: '1234',\n    recording_id: '4321',\n    endpoint: 'https://upload-bucket.s3.amazonaws.com/2345678/'\n}  Step 2  Upload the bundle to the provided endpoint  PUT https://upload-bucket.s3.amazonaws.com/2345678/  Step 3  Notify the system the recording session bundle has been uploaded  PUT https://api.bugsee.com/issues/1234/recordings/4321  {\n    app_token: '1234567',\n    access_token: '654321',\n    upload_complete: true\n}", 
            "title": "Creating new issue"
        }, 
        {
            "location": "/reference/rest-handbook/#adding-recording-to-an-issue", 
            "text": "The sequence is similar to creating a new issue with slight variations, but it consists of 3 steps as well  Step 1  POST https://api.bugsee.com/issues/1234/recordings  {\n    app_token: '1234567',\n    access_token: '654321',\n    environment: {\n        ...\n    }\n}  The response in case of success is going to include issue_id, recording_id and an endpoint for uploading the bundle.  {\n    issue_id: '1234',\n    session_id: '4321',\n    endpoint: 'https://upload-bucket.s3.amazonaws.com/2345678/'\n}  Step 2  Upload the bundle to the provided endpoint  POST https://upload-bucket.s3.amazonaws.com/2345678/  Step 3  Notify the system the recording session bundle has been uploaded  PUT https://api.bugsee.com/issues/1234/recordings/4321  {\n    app_token: '1234567',\n    access_token: '654321',\n    upload_complete: true\n}", 
            "title": "Adding recording to an issue"
        }, 
        {
            "location": "/reference/rest-handbook/#searching-issues", 
            "text": "In order to locate an existing issue, a search can be performed on the issues within the application  GET https://api.bugsee.com/issues?app_token=1234567 access_token=654321 term=login+screen", 
            "title": "Searching issues"
        }, 
        {
            "location": "/reference/rest/", 
            "text": "REST API Reference\n\n\nAgent sessions\n\n\nCreate session\n\n\nCreates new or updates an existing agent session. Called upon application start (SDK launch) in mobile applications.\n\n\nPOST /sessions\n\n\n\n\n Request \n\n\n\n\n\n\n\n\nAttribute\n\n\nType\n\n\nFlags\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\napp_token\n\n\nString\n\n\nMandatory\n\n\n\n\n\n\n\n\naccess_token\n\n\nString\n\n\nOptional\n\n\nIf already exist, must send the existing one\n\n\n\n\n\n\nenvironment\n\n\nENVIRONMENT\n\n\nMandatory\n\n\n\n\n\n\n\n\n\n\n Response \n\n\n\n\n\n\n\n\nAttribute\n\n\nType\n\n\nFlags\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naccess_token\n\n\nString\n\n\nMandatory\n\n\n\n\n\n\n\n\nanonymous\n\n\nBoolean\n\n\nMandatory\n\n\nIs this an anonymous session\n\n\n\n\n\n\nconfig\n\n\nCONFIG\n\n\nMandatory\n\n\nClient agent configuration, may override local settings\n\n\n\n\n\n\n\n\nAuthentication\n\n\nLogin is optional in mobile SDKs, mandatory in browser extensions.\n\n\nLogin\n\n\nPOST /login\n\n\n\n\n Request \n\n\n\n\n\n\n\n\nAttribute\n\n\nType\n\n\nFlags\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naccess_token\n\n\nString\n\n\nOptional\n\n\nIf already exist, must send the existing one\n\n\n\n\n\n\nusername\n\n\nString\n\n\nMandatory\n\n\n\n\n\n\n\n\npassword\n\n\nString\n\n\nMandatory\n\n\n\n\n\n\n\n\n\n\n Response \n\n\n\n\n\n\n\n\nAttribute\n\n\nType\n\n\nFlags\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naccess_token\n\n\nString\n\n\nMandatory\n\n\nClient must store the new token, it may be refreshed\n\n\n\n\n\n\nname\n\n\nString\n\n\nMandatory\n\n\nName of the user for display\n\n\n\n\n\n\n\n\nLogout\n\n\nPOST /logout\n\n\n\n\n Request \n\n\n\n\n\n\n\n\nAttribute\n\n\nType\n\n\nFlags\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naccess_token\n\n\nString\n\n\nOptional\n\n\nIf already exist, must send the existing one\n\n\n\n\n\n\n\n\n Response \n\n\n\n\n\n\n\n\nAttribute\n\n\nType\n\n\nFlags\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naccess_token\n\n\nString\n\n\nMandatory\n\n\nClient must store the new token, it may be refreshed\n\n\n\n\n\n\n\n\nApplications\n\n\nGet list of applications\n\n\nGET /applications\n\n\n\n\n Request \n\n\n\n\n\n\n\n\nAttribute\n\n\nType\n\n\nFlags\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naccess_token\n\n\nString\n\n\nMandatory\n\n\n\n\n\n\n\n\n\n\n Response \n\n\n\n\n\n\n\n\nAttribute\n\n\nType\n\n\nFlags\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nmeta\n\n\nMETA\n\n\nMandatory\n\n\n\n\n\n\n\n\nitems\n\n\n[\nAPPLICATION\n]\n\n\nMandatory\n\n\nArray of found applications\n\n\n\n\n\n\n\n\n APPLICATION \n\n\n\n\n\n\n\n\nAttribute\n\n\nType\n\n\nFlags\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\napp_token\n\n\nString\n\n\nMandatory\n\n\nApplication token\n\n\n\n\n\n\nname\n\n\nString\n\n\nMandatory\n\n\nApplication name\n\n\n\n\n\n\ntype\n\n\nString\n\n\nMandatory\n\n\n'ios', 'android', 'web', 'tvos'...\n\n\n\n\n\n\n\n\nIssues\n\n\nCreate issue\n\n\nPOST /issues\n\n\n\n\n Request \n\n\n\n\n\n\n\n\nAttribute\n\n\nType\n\n\nFlags\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\napp_token\n\n\nString\n\n\nMandatory\n\n\n\n\n\n\n\n\naccess_token\n\n\nString\n\n\nMandatory\n\n\n\n\n\n\n\n\ntype\n\n\nString\n\n\nMandatory\n\n\n'bug', 'crash', 'assert'\n\n\n\n\n\n\nenvironment\n\n\nENVIRONMENT\n\n\nMandatory\n\n\n\n\n\n\n\n\nseverity\n\n\nNumber\n\n\nMandatory\n\n\n1..5\n\n\n\n\n\n\nsummary\n\n\nString\n\n\nMandatory\n\n\nOne line summary of the issue\n\n\n\n\n\n\ndescription\n\n\nString\n\n\nMandatory\n\n\nDescription of the issue\n\n\n\n\n\n\n\n\n Response \n\n\n\n\n\n\n\n\nAttribute\n\n\nType\n\n\nFlags\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nissue_id\n\n\nString\n\n\nMandatory\n\n\nUnique ID of the issue in the system\n\n\n\n\n\n\nsession_id\n\n\nString\n\n\nMandatory\n\n\nUnique ID of the recording session in the system\n\n\n\n\n\n\nendpoint\n\n\nString\n\n\nMandatory\n\n\nEndpoint that can be used to upload the report bundle\n\n\n\n\n\n\n\n\nList/Search issues\n\n\nGET /issues?app_token=654321\naccess_token=123456...\n\n\n\n\n\n\n\n\n\n\nAttribute\n\n\nType\n\n\nFlags\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\napp_token\n\n\nString\n\n\nMandatory\n\n\n\n\n\n\n\n\naccess_token\n\n\nString\n\n\nMandatory\n\n\n\n\n\n\n\n\nterm\n\n\nString\n\n\nMandatory\n\n\nSearch term\n\n\n\n\n\n\n\n\n Response \n\n\n\n\n\n\n\n\nAttribute\n\n\nType\n\n\nFlags\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nmeta\n\n\nMETA\n\n\nMandatory\n\n\n\n\n\n\n\n\nitems\n\n\n[ISSUE]\n\n\nMandatory\n\n\nArray of found issues\n\n\n\n\n\n\n\n\n ISSUE \n\n\n\n\n\n\n\n\nAttribute\n\n\nType\n\n\nFlags\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nid\n\n\nString\n\n\nMandatory\n\n\n\n\n\n\n\n\nsummary\n\n\nString\n\n\nMandatory\n\n\n\n\n\n\n\n\ndescription\n\n\nString\n\n\nMandatory\n\n\n\n\n\n\n\n\nseverity\n\n\nNumber\n\n\nMandatory\n\n\n1..5\n\n\n\n\n\n\n\n\nRecordings\n\n\nCreate recording\n\n\nPOST /issues/1234/recordings\n\n\n\n\n Request \n\n\n\n\n\n\n\n\nAttribute\n\n\nType\n\n\nFlags\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\napp_token\n\n\nString\n\n\nMandatory\n\n\n\n\n\n\n\n\naccess_token\n\n\nString\n\n\nMandatory\n\n\n\n\n\n\n\n\nenvironment\n\n\nENVIRONMENT\n\n\nMandatory\n\n\n\n\n\n\n\n\n\n\n Response \n\n\n\n\n\n\n\n\nAttribute\n\n\nType\n\n\nFlags\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nissue_id\n\n\nString\n\n\nMandatory\n\n\nUnique ID of the issue in the system\n\n\n\n\n\n\nrecording_id\n\n\nString\n\n\nMandatory\n\n\nUnique ID of the recording in the system\n\n\n\n\n\n\nendpoint\n\n\nString\n\n\nMandatory\n\n\nEndpoint that can be used to upload the report bundle\n\n\n\n\n\n\n\n\nNotify upload completion\n\n\nPOST /issues/1234/recordings/4321/status\n\n\n\n\n Request \n\n\n\n\n\n\n\n\nAttribute\n\n\nType\n\n\nFlags\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\napp_token\n\n\nString\n\n\nMandatory\n\n\n\n\n\n\n\n\naccess_token\n\n\nString\n\n\nMandatory\n\n\n\n\n\n\n\n\nstatus\n\n\nString\n\n\nMandatory\n\n\n'completed', 'failed', 'aborted'\n\n\n\n\n\n\n\n\nCommon\n\n\n\n\nENVIRONMENT\n\n\n\n\n\n\n\n\nAttribute\n\n\nType\n\n\nFlags\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nplatform.type\n\n\nString\n\n\nMandatory\n\n\n'ios', 'android', 'web', 'tvos', ...\n\n\n\n\n\n\nplatform.version\n\n\nString\n\n\nMandatory\n\n\n\n\n\n\n\n\nhardware.manufacturer\n\n\nString\n\n\nMandatory\n\n\n\n\n\n\n\n\nhardware.model\n\n\nString\n\n\nMandatory\n\n\n\n\n\n\n\n\nsdk.version\n\n\nString\n\n\nMandatory\n\n\n\n\n\n\n\n\napp.version\n\n\nString\n\n\nMandatory\n\n\n\n\n\n\n\n\napp.build\n\n\nString\n\n\nMandatory\n\n\n\n\n\n\n\n\napp.package_id\n\n\nString\n\n\nMandatory\n\n\ne.x com.dishero.cool-app\n\n\n\n\n\n\n\n\n\n\nMETA\n\n\n\n\n\n\n\n\nAttribute\n\n\nType\n\n\nFlags\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntotal\n\n\nNumber\n\n\nMandatory\n\n\nTotal number of results in the database for this query\n\n\n\n\n\n\nsize\n\n\nNumber\n\n\nMandatory\n\n\nNumber of results returned in this query\n\n\n\n\n\n\noffset\n\n\nNumber\n\n\nMandatory\n\n\nFirst item in the page\n\n\n\n\n\n\nLimit\n\n\nNumber\n\n\nMandatory\n\n\nLimit from the response (or its default value)\n\n\n\n\n\n\n\n\n\n\nCONFIG\n\n\n\n\n\n\n\n\nAttribute\n\n\nType\n\n\nFlags\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nallow_anonymous\n\n\nBool\n\n\nMandatory\n\n\nWill the server accept anonymous reports from this session? This does not apply to 'crash' and 'assert' reporting, these will get accepted regardless.", 
            "title": "REST Reference"
        }, 
        {
            "location": "/reference/rest/#rest-api-reference", 
            "text": "", 
            "title": "REST API Reference"
        }, 
        {
            "location": "/reference/rest/#agent-sessions", 
            "text": "Create session  Creates new or updates an existing agent session. Called upon application start (SDK launch) in mobile applications.  POST /sessions   Request      Attribute  Type  Flags  Description      app_token  String  Mandatory     access_token  String  Optional  If already exist, must send the existing one    environment  ENVIRONMENT  Mandatory       Response      Attribute  Type  Flags  Description      access_token  String  Mandatory     anonymous  Boolean  Mandatory  Is this an anonymous session    config  CONFIG  Mandatory  Client agent configuration, may override local settings", 
            "title": "Agent sessions"
        }, 
        {
            "location": "/reference/rest/#authentication", 
            "text": "Login is optional in mobile SDKs, mandatory in browser extensions.  Login  POST /login   Request      Attribute  Type  Flags  Description      access_token  String  Optional  If already exist, must send the existing one    username  String  Mandatory     password  String  Mandatory       Response      Attribute  Type  Flags  Description      access_token  String  Mandatory  Client must store the new token, it may be refreshed    name  String  Mandatory  Name of the user for display     Logout  POST /logout   Request      Attribute  Type  Flags  Description      access_token  String  Optional  If already exist, must send the existing one      Response      Attribute  Type  Flags  Description      access_token  String  Mandatory  Client must store the new token, it may be refreshed", 
            "title": "Authentication"
        }, 
        {
            "location": "/reference/rest/#applications", 
            "text": "Get list of applications  GET /applications   Request      Attribute  Type  Flags  Description      access_token  String  Mandatory       Response      Attribute  Type  Flags  Description      meta  META  Mandatory     items  [ APPLICATION ]  Mandatory  Array of found applications      APPLICATION      Attribute  Type  Flags  Description      app_token  String  Mandatory  Application token    name  String  Mandatory  Application name    type  String  Mandatory  'ios', 'android', 'web', 'tvos'...", 
            "title": "Applications"
        }, 
        {
            "location": "/reference/rest/#issues", 
            "text": "Create issue  POST /issues   Request      Attribute  Type  Flags  Description      app_token  String  Mandatory     access_token  String  Mandatory     type  String  Mandatory  'bug', 'crash', 'assert'    environment  ENVIRONMENT  Mandatory     severity  Number  Mandatory  1..5    summary  String  Mandatory  One line summary of the issue    description  String  Mandatory  Description of the issue      Response      Attribute  Type  Flags  Description      issue_id  String  Mandatory  Unique ID of the issue in the system    session_id  String  Mandatory  Unique ID of the recording session in the system    endpoint  String  Mandatory  Endpoint that can be used to upload the report bundle     List/Search issues  GET /issues?app_token=654321 access_token=123456...     Attribute  Type  Flags  Description      app_token  String  Mandatory     access_token  String  Mandatory     term  String  Mandatory  Search term      Response      Attribute  Type  Flags  Description      meta  META  Mandatory     items  [ISSUE]  Mandatory  Array of found issues      ISSUE      Attribute  Type  Flags  Description      id  String  Mandatory     summary  String  Mandatory     description  String  Mandatory     severity  Number  Mandatory  1..5", 
            "title": "Issues"
        }, 
        {
            "location": "/reference/rest/#recordings", 
            "text": "Create recording  POST /issues/1234/recordings   Request      Attribute  Type  Flags  Description      app_token  String  Mandatory     access_token  String  Mandatory     environment  ENVIRONMENT  Mandatory       Response      Attribute  Type  Flags  Description      issue_id  String  Mandatory  Unique ID of the issue in the system    recording_id  String  Mandatory  Unique ID of the recording in the system    endpoint  String  Mandatory  Endpoint that can be used to upload the report bundle     Notify upload completion  POST /issues/1234/recordings/4321/status   Request      Attribute  Type  Flags  Description      app_token  String  Mandatory     access_token  String  Mandatory     status  String  Mandatory  'completed', 'failed', 'aborted'", 
            "title": "Recordings"
        }, 
        {
            "location": "/reference/rest/#common", 
            "text": "ENVIRONMENT     Attribute  Type  Flags  Description      platform.type  String  Mandatory  'ios', 'android', 'web', 'tvos', ...    platform.version  String  Mandatory     hardware.manufacturer  String  Mandatory     hardware.model  String  Mandatory     sdk.version  String  Mandatory     app.version  String  Mandatory     app.build  String  Mandatory     app.package_id  String  Mandatory  e.x com.dishero.cool-app      META     Attribute  Type  Flags  Description      total  Number  Mandatory  Total number of results in the database for this query    size  Number  Mandatory  Number of results returned in this query    offset  Number  Mandatory  First item in the page    Limit  Number  Mandatory  Limit from the response (or its default value)      CONFIG     Attribute  Type  Flags  Description      allow_anonymous  Bool  Mandatory  Will the server accept anonymous reports from this session? This does not apply to 'crash' and 'assert' reporting, these will get accepted regardless.", 
            "title": "Common"
        }, 
        {
            "location": "/reference/bundle-format/", 
            "text": "Bundle format\n\n\nBundle is a zip archive which must contain at least one file \n manifest.json \n\n\nManifest file\n\n\nThe file must be named \n manifest.json \n (lower case)\n\n\nMANIFEST\n\n\n\n\n\n\n\n\nAttribute\n\n\nType\n\n\nFlags\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nNumber\n\n\nMandatory\n\n\n1\n\n\n\n\n\n\nfiles\n\n\n[\nSTREAM\n]\n\n\nMandatory\n\n\nArray of STREAM structures\n\n\n\n\n\n\n\n\nSTREAM\n\n\n\n\n\n\n\n\nAttribute\n\n\nType\n\n\nFlags\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nMandatory\n\n\nName of the stream\n\n\n\n\n\n\ntype\n\n\nString\n\n\nMandatory\n\n\nType of the stream ('video', 'touch', 'events', 'traces', 'log', 'network')\n\n\n\n\n\n\nfilename\n\n\nString\n\n\nMandatory\n\n\nName of the file withing the bundle\n\n\n\n\n\n\nvideo_attrs\n\n\nVIDEO_ATTRS\n\n\nOptional\n\n\nIf the stream is 'video'\n\n\n\n\n\n\nlog_attrs\n\n\nLOG_ATTRS\n\n\nOptional\n\n\nIf the stream is 'log'\n\n\n\n\n\n\n\n\nVIDEO_ATTRS\n\n\n\n\n\n\n\n\nAttribute\n\n\nType\n\n\nFlags\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nformat\n\n\nString\n\n\nMandatory\n\n\nmp4\n\n\n\n\n\n\nwidth\n\n\nNumber\n\n\nMandatory\n\n\n\n\n\n\n\n\nheight\n\n\nNumber\n\n\nMandatory\n\n\n\n\n\n\n\n\nframe_rate\n\n\nNumber\n\n\nMandatory\n\n\n\n\n\n\n\n\n\n\nLOG_ATTRS\n\n\n\n\n\n\n\n\nAttribute\n\n\nType\n\n\nFlags\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nformat\n\n\nString\n\n\nMandatory\n\n\n'logcat', 'nslog'\n\n\n\n\n\n\n\n\nTouch file\n\n\n\n\n\n\n\n\nAttribute\n\n\nType\n\n\nFlags\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nNumber\n\n\nMandatory\n\n\n1\n\n\n\n\n\n\nevents\n\n\n[\nTOUCH_EVENT\n]\n\n\nMandatory\n\n\nArray of touch events, sorted by time\n\n\n\n\n\n\n\n\nTOUCH_EVENT\n\n\n\n\n\n\n\n\nAttribute\n\n\nType\n\n\nFlags\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntimestamp\n\n\nDate\n\n\nMandatory\n\n\nTime of the event\n\n\n\n\n\n\nid\n\n\nString\n\n\nMandatory\n\n\nUnique ID of the touch to identify touch across its states\n\n\n\n\n\n\ntype\n\n\nString\n\n\nMandatory\n\n\n'begin', 'end', 'move'\n\n\n\n\n\n\nx\n\n\nNumber\n\n\nOptional\n\n\n\n\n\n\n\n\ny\n\n\nNumber\n\n\nOptional\n\n\n\n\n\n\n\n\n\n\nTraces file\n\n\nTrace can be used to continuously monitor a value of a variable. Variable names\nmay include dots for namespace sake, system.* namespace is reserved and can not\nbe used a by a user (e.x system.orienation, system.view, system.free_memory)\n\n\n\n\n\n\n\n\nAttribute\n\n\nType\n\n\nFlags\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nNumber\n\n\nMandatory\n\n\n1\n\n\n\n\n\n\ntraces\n\n\n[\nTRACE\n]\n\n\nMandatory\n\n\nArray of variables, sorted by time\n\n\n\n\n\n\n\n\nTRACE\n\n\n\n\n\n\n\n\nAttribute\n\n\nType\n\n\nFlags\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nMandatory\n\n\nVariable name\n\n\n\n\n\n\ntype\n\n\nString\n\n\nMandatory\n\n\nType of the variable ('string', 'number', 'bool')\n\n\n\n\n\n\nvalue\n\n\nString/Number/Bool\n\n\nMandatory\n\n\nInitial value for the variable\n\n\n\n\n\n\nevents\n\n\n[ \nTRACE_EVENT\n ]\n\n\nMandatory\n\n\nArray of events for that variable, sorted by timestamp\n\n\n\n\n\n\n\n\nTRACE_EVENT\n\n\n\n\n\n\n\n\nAttribute\n\n\nType\n\n\nFlags\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntimestamp\n\n\nDate\n\n\nMandatory\n\n\nTime of the event\n\n\n\n\n\n\nvalue\n\n\nString/Number/Bool\n\n\nMandatory\n\n\nNew value of the variable\n\n\n\n\n\n\n\n\nEvents file\n\n\n\n\n\n\n\n\nAttribute\n\n\nType\n\n\nFlags\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nversion\n\n\nNumber\n\n\nMandatory\n\n\n1\n\n\n\n\n\n\nevents\n\n\n[\nEVENT\n]\n\n\nMandatory\n\n\nArray of events, sorted by timestamp\n\n\n\n\n\n\n\n\nEVENT\n\n\nEvent names may include dots for namespace sake, system.* namespace is reserved and can not\nbe used a by a user (e.x system.memory_low, system.battery_low, etc)\n\n\n\n\n\n\n\n\nAttribute\n\n\nType\n\n\nFlags\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntimestamp\n\n\nDate\n\n\nMandatory\n\n\nTime of the event\n\n\n\n\n\n\nname\n\n\nString\n\n\nMandatory\n\n\nName of the event\n\n\n\n\n\n\nparams\n\n\nDictionary\n\n\nOptional\n\n\nParameters associated with the even", 
            "title": "Bundle Format"
        }, 
        {
            "location": "/reference/bundle-format/#bundle-format", 
            "text": "Bundle is a zip archive which must contain at least one file   manifest.json", 
            "title": "Bundle format"
        }, 
        {
            "location": "/reference/bundle-format/#manifest-file", 
            "text": "The file must be named   manifest.json   (lower case)  MANIFEST     Attribute  Type  Flags  Description      version  Number  Mandatory  1    files  [ STREAM ]  Mandatory  Array of STREAM structures     STREAM     Attribute  Type  Flags  Description      name  String  Mandatory  Name of the stream    type  String  Mandatory  Type of the stream ('video', 'touch', 'events', 'traces', 'log', 'network')    filename  String  Mandatory  Name of the file withing the bundle    video_attrs  VIDEO_ATTRS  Optional  If the stream is 'video'    log_attrs  LOG_ATTRS  Optional  If the stream is 'log'     VIDEO_ATTRS     Attribute  Type  Flags  Description      format  String  Mandatory  mp4    width  Number  Mandatory     height  Number  Mandatory     frame_rate  Number  Mandatory      LOG_ATTRS     Attribute  Type  Flags  Description      format  String  Mandatory  'logcat', 'nslog'", 
            "title": "Manifest file"
        }, 
        {
            "location": "/reference/bundle-format/#touch-file", 
            "text": "Attribute  Type  Flags  Description      version  Number  Mandatory  1    events  [ TOUCH_EVENT ]  Mandatory  Array of touch events, sorted by time     TOUCH_EVENT     Attribute  Type  Flags  Description      timestamp  Date  Mandatory  Time of the event    id  String  Mandatory  Unique ID of the touch to identify touch across its states    type  String  Mandatory  'begin', 'end', 'move'    x  Number  Optional     y  Number  Optional", 
            "title": "Touch file"
        }, 
        {
            "location": "/reference/bundle-format/#traces-file", 
            "text": "Trace can be used to continuously monitor a value of a variable. Variable names\nmay include dots for namespace sake, system.* namespace is reserved and can not\nbe used a by a user (e.x system.orienation, system.view, system.free_memory)     Attribute  Type  Flags  Description      version  Number  Mandatory  1    traces  [ TRACE ]  Mandatory  Array of variables, sorted by time     TRACE     Attribute  Type  Flags  Description      name  String  Mandatory  Variable name    type  String  Mandatory  Type of the variable ('string', 'number', 'bool')    value  String/Number/Bool  Mandatory  Initial value for the variable    events  [  TRACE_EVENT  ]  Mandatory  Array of events for that variable, sorted by timestamp     TRACE_EVENT     Attribute  Type  Flags  Description      timestamp  Date  Mandatory  Time of the event    value  String/Number/Bool  Mandatory  New value of the variable", 
            "title": "Traces file"
        }, 
        {
            "location": "/reference/bundle-format/#events-file", 
            "text": "Attribute  Type  Flags  Description      version  Number  Mandatory  1    events  [ EVENT ]  Mandatory  Array of events, sorted by timestamp     EVENT  Event names may include dots for namespace sake, system.* namespace is reserved and can not\nbe used a by a user (e.x system.memory_low, system.battery_low, etc)     Attribute  Type  Flags  Description      timestamp  Date  Mandatory  Time of the event    name  String  Mandatory  Name of the event    params  Dictionary  Optional  Parameters associated with the even", 
            "title": "Events file"
        }, 
        {
            "location": "/usage/", 
            "text": "", 
            "title": "Usage"
        }
    ]
}